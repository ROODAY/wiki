{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Code Diary/Waterfallgile","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Mix of Waterfall and Agile. Waterfall is about strictly planning out and estimating a project before you start so that you can commit to deadlines, agile is about working on what's the highest priority work, and redoing the list of priority on a short cadence to make sure it's accurate.\"), mdx(\"p\", null, \"Gets used in Research Agility specifically because we want to do agile to make sure we're producing the most important stuff the fastest, but we need to commit to deadlines for partner teams so it's waterfall in that sense.\"), mdx(\"p\", null, \"Waterfall is more necessary when dependency chains are long, agile works when they're short. E.g. Discord probably doesn't have to answer to anyone but the users, and that's a scenario where they just want to work on the highest priority tasks, which are probably decided based on customer feedback (and probably some money related factors too). In Research Agility, other teams need the platform we're making in order to make their things, so we can't be truly agile.\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[]},"fields":{"slug":"/Code Diary/Waterfallgile","title":"Waterfallgile"}}},"pageContext":{"id":"9ae638f5-0116-5ef6-b853-79c16960a93e"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}