{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Evergreen/Having friends at work is the greatest factor against attrition","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This was an idea that \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Shashank\",\n    \"title\": \"Shashank\"\n  }, \"[[Shashank]]\"), \" told me, that people who have a best friend at work are much less likely to leave than people who don't, as community is a key part to happiness. This came in the conversation that birthed \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Is-Happiness-a-Delusion\",\n    \"title\": \"Is Happiness a Delusion\"\n  }, \"[[Is Happiness a Delusion]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Convo with uber driver and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Shashank\",\n    \"title\": \"Shashank\"\n  }, \"[[Shashank]]\"), \", idea that happiness is just telling yourself that your life is better than it is. I was thinking that its telling yourself your life isn't as bad as you think it is. \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Shashank\",\n    \"title\": \"Shashank\"\n  }, \"[[Shashank]]\"), \" said this is the same thing, but I think the framing is an important distinction.\"), mdx(\"p\", null, \"There was more to the conversation, mostly relating to the idea of ignorance is bliss/the more you know about reality the more sobered you are.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"7a50c32f-db02-52fb-b8dd-07fd20932684","fields":{"slug":"/Evergreen/Is Happiness a Delusion","title":"Is Happiness a Delusion"}}}],"inboundReferences":[]},"fields":{"slug":"/Evergreen/Having friends at work is the greatest factor against attrition","title":"Having friends at work is the greatest factor against attrition"}}},"pageContext":{"id":"51893f2f-9fb8-5ddc-8bb7-e36525914bbf"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}