{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Evergreen/How Do We Solve Hedonic Adaptation","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Define what exactly a resource is, is it time/labor/materials? or just energy?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"is money really bad? think of manna resource credits, that's the same thing. I.e. it may not be inherently bad, it's just a tool that can be used for good or bad.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Is trade/exchange inherently bad?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Scarcity vs. thought of scarcity/artificial scarcity as promoted by media\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"what if we already have enough resources for everyone, and it's only the distribution of resources that is bad\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Is wanting more at the cost of others the root problem?\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Is more/unlimited resources always better than less? Is this a form of hedonic adaptation itself? Then \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/How-Do-We-Solve-Hedonic-Adaptation\",\n    \"title\": \"How Do We Solve Hedonic Adaptation\"\n  }, \"[[How Do We Solve Hedonic Adaptation]]\"), \"?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Do the idea of western individualism vs. eastern communalism relate to this?\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"07d432fb-8421-53d8-97e7-490c7239c220","fields":{"slug":"/Evergreen/Money Is An Abstraction For Resources","title":"Money Is An Abstraction For Resources"}}}]},"fields":{"slug":"/Evergreen/How Do We Solve Hedonic Adaptation","title":"How Do We Solve Hedonic Adaptation"}}},"pageContext":{"id":"38df0cab-b4be-5dc2-9736-133200eb5af7"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}